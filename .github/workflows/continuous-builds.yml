# This workflows will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: Continuous Builds

on:
  push:
    branches:
      - '**'
    tags:
      - '!**'

jobs:
  pytest-ubuntu-container:
    name: Run tests on Ubuntu 24.04 (Docker)
    runs-on: ubuntu-24.04
    container: ubuntu:24.04
    steps:
      - name: Install dependencies
        run: |
          apt-get -y update 
          apt-get install -y fakeroot python3-pip python3-venv lsb-release binutils patchelf git
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0'
      - name: Set up a virtualenv
        run: |
          python3 -m venv .venv
      - name: Install appimage-builder and run tests
        run: |
          . .venv/bin/activate
          pip install pytest
          pip install -e .[dev]
          pytest tests

  pytest-ubuntu-runner:
    name: Run tests on Ubuntu 24.04 with python 3.13.
    runs-on: ubuntu-24.04
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get -y update 
          sudo apt-get install -y fakeroot lsb-release binutils patchelf git
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Clear Python cache
        run: |
          sudo rm -rf /__t/Python
      - name: Install python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          cache: 'pip'
      - name: Install appimage-builder and run tests
        run: |
          pip install pytest
          pip install -e .[dev]
          python3 -m pytest tests

  pytest-archlinux:
    name: Run tests on ArchLinux (Docker)
    runs-on: ubuntu-24.04
    container: archlinux
    steps:
      - name: Install dependencies
        run: pacman -Syu --noconfirm python-pip binutils patchelf fakeroot lsb-release strace patchelf git
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up a virtualenv
        run: |
          python3 -m venv .venv
      - name: Install appimage-builder and run tests
        run: |
          . .venv/bin/activate
          pip install pytest
          pip install -e .[dev]
          pytest tests

  build:
    runs-on: ubuntu-24.04
#    needs: [ pytest-ubuntu-container, pytest-ubuntu-runner, pytest-archlinux ]
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y patchelf desktop-file-utils libgdk-pixbuf2.0-dev fakeroot strace git lsb-release
          sudo wget https://github.com/AppImage/appimagetool/releases/download/continuous/appimagetool-x86_64.AppImage -O /usr/local/bin/appimagetool
          sudo chmod +x /usr/local/bin/appimagetool
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install appimage-builder
        run: |
          sudo pip install setuptools wheel twine
          sudo pip install --ignore-installed --use-pep517 .
      - name: Build AppImage
        run: |
          cd recipes/appimage-builder
          export APPIMAGE_BUILDER_VERSION=$(appimage-builder --version | head -1 | cut -f 2 -d" ")
          appimage-builder --skip-test
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: appimage-builder
          path: 'recipes/appimage-builder/appimage-builder*.AppImage*'
  test-pack-bash:
    runs-on: ubuntu-24.04
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Download AppImage from build job
        uses: actions/download-artifact@v4
        with:
          name: appimage-builder
      - name: Install dependencies
        run: |
          sudo apt install -y adwaita-icon-theme
      - name: Pack bash
        run: |
          # build bash
          BUILDER_PATH=$(find $PWD -name appimage-builder-*.AppImage)
          chmod +x "$BUILDER_PATH"
          cd recipes/bash/
          "$BUILDER_PATH" --skip-test
      - name: Test bash
        run: |
          recipes/bash/*.AppImage --appimage-extract-and-run -c "echo Hello World"
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: bash
          path: 'recipes/bash/*.AppImage*'
  publish:
    runs-on: ubuntu-24.04
    needs: test-pack-bash
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Download AppImage from build job
        uses: actions/download-artifact@v4
        with:
          name: appimage-builder
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: true
          automatic_release_tag: Continuous
          files: 'appimage-builder*.AppImage*'
